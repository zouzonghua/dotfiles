#!/bin/bash

# Delight (DE light) --- Toggle DE/WM and Emacs themes
#
# Copyright (c) 2020-2023  Protesilaos Stavrou <info@protesilaos.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
### Commentary:
#
# Simple tool to switch between light and dark themes.  Primarily
# centred around my BSPWM/HerbstluftWM or Sway setup.  For the standard
# DEs, this has been tested with GNOME 42 and Xfce 4.16.
#
# Part of my dotfiles: <https://git.sr.ht/~protesilaos/dotfiles>.

### Code:

#### General

_depcheck ()
{
    command -v "$1" > /dev/null || { echo "Missing dependency: $1."; return 1; }
}

_sed ()
{
    sed --follow-symlinks -i "$@"
}

_vim () {
    _depcheck vim

    case "$(cat "$wm_theme")"
    in
        light)
            _sed "s,\(colorscheme\).*,\1 default," \
                 "$HOME"/.vimrc
            ;;
        dark)
            _sed "s,\(colorscheme\).*,\1 elflord," \
                 "$HOME"/.vimrc
            ;;
    esac

}

_emacs ()
{
    _depcheck emacs

    pgrep -x emacs > /dev/null || return 1

    local light_theme
    local dark_theme

    light_theme="modus-operandi"
    dark_theme="modus-vivendi"

    # Just switch to the appropriate theme for Emacs:
    # https://git.sr.ht/~protesilaos/modus-themes
    case "$1"
    in
        l*) emacsclient -e "(load-theme '${light_theme} :no-confirm)" > /dev/null ;;
        d*) emacsclient -e "(load-theme '${dark_theme} :no-confirm)"  > /dev/null ;;
    esac
}


_alacritty ()
{
    _depcheck alacritty

    active_theme="$HOME"/.config/alacritty/modus-themes-active.yml

    [ -f "$active_theme" ] || { echo "No alacritty theme. Did you 'stow' your configurations?"; return 1; }

    case "$(cat "$wm_theme")"
    in
        light) _sed "s,vivendi,operandi," "$active_theme" ;;
        dark)  _sed "s,operandi,vivendi," "$active_theme" ;;
    esac
}

_rofi ()
{
    _depcheck rofi

    active_theme="$HOME"/.config/rofi/themes/modus-themes-active.rasi

    [ -f "$active_theme" ] || { echo "No rofi theme. Did you 'stow' your configurations?"; return 1; }

    case "$(cat "$wm_theme")"
    in
        light) echo -e '@import "modus-operandi.rasi"' > "$active_theme" ;;
        dark)  echo -e '@import "modus-vivendi.rasi"' > "$active_theme"  ;;
    esac
}

_polybar ()
{
    _depcheck polybar

    pgrep -x polybar > /dev/null && pkill -x polybar

    active_theme="$HOME"/.config/polybar/config_colors

    [ -f "$active_theme" ] || { echo "No active theme"; exit 1; }
    [ -f "$wm_theme" ] || { echo "No WM session theme"; exit 1; }

    case "$(cat "$wm_theme")"
    in
        light) _sed "s,vivendi,operandi," "$active_theme" ;;
        dark)  _sed "s,operandi,vivendi," "$active_theme" ;;
    esac
    polybar "$DESKTOP_SESSION"
}

_feh ()
{
    _depcheck feh

    image_light="$HOME"/Pictures/light.jpg
    image_dark="$HOME"/Pictures/dark.jpg

    case "$(cat "$wm_theme")"
    in
        light) [ -f "$image_light" ] && feh --bg-fill "$image_light" ;;
        dark)  [ -f "$image_dark" ]  && feh --bg-fill "$image_dark"  ;;
    esac
}


_bspwm ()
{
    _depcheck "$wm_executable"

    _gtheme

    echo "$style" > "$wm_theme"

    _depcheck "$conf_colors" && "$conf_colors"

    #_emacs "$style" &
    #_xsettingsd "$style" &
    #_xterm &
    _alacritty &
    _feh &
    _rofi &
    _polybar&
    _vim &

}

_gtk_common ()
{

    # GTK 3
    _sed "s,\(gtk-theme-name=\).*,\1${1}, ; s,\(gtk-icon-theme-name=\).*,\1${2}, ; s,\(gtk-application-prefer-dark-theme=\).*,\1${3}," \
         "$HOME"/.config/gtk-3.0/settings.ini
}



#### Gnome and gsettings

_ggtk ()
{
    gsettings "$1" org.gnome.desktop.interface gtk-theme "${@:2}"
}

_gcolor_scheme ()
{
    gsettings "$1" org.gnome.desktop.interface color-scheme "${@:2}"
}

# Get the GTK theme
_ggtk_get ()
{
    _ggtk 'get'
}

# Set the GTK theme
_ggtk_set ()
{
    _ggtk 'set' "$1"
}

# Get the Color Scheme
_gcolor_scheme_get ()
{
    _gcolor_scheme 'get'
}

# Set the Color Scheme
_gcolor_scheme_set ()
{
    _gcolor_scheme 'set' "$1"
}

_gtheme ()
{

    _depcheck gsettings

    if [ "$(_ggtk_get)" = "'Adwaita'" ]
    then
        style=dark
        _gtk_common 'Adwaita-dark' 'Adwaita' 'true'
        _ggtk_set 'Adwaita-dark'
        _gcolor_scheme_set 'prefer-dark'
    else
        style=light
        _gtk_common 'Adwaita' 'Adwaita' 'false'
        _ggtk_set 'Adwaita'
        _gcolor_scheme_set 'prefer-light'
    fi
}


#### Sessions

case "$DESKTOP_SESSION"
in
    bspwm)
        wm_executable=bspwm
        wm_theme="$HOME"/.config/bspwm/active-theme
        conf_colors=bspwm_conf_colors

        _bspwm
        ;;

esac




