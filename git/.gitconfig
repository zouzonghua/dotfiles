[user]
  name = zouzonghua
  email = zouzonghua.cn@gmail.com
[push]
  default = simple
[pull]
  rebase = false
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto
[alias]
  # 新增暂存区文件
  a = "!git status --short | peco | awk '{print $2}' | xargs git add"
  # 撤销暂存区文件
  ra = "!git status --short | peco | awk '{print $2}' | xargs git reset"
  # 撤销已删除的暂存区文件
  rad = "!git status --short | peco | awk '{print $2}' | xargs git reset -q HEAD --"
  # 撤销本地更改
  re = "!git status --short | peco | awk '{print $2}' | xargs git checkout --"
  # 撤销合并代码  检查保存在stage的文件
  rmt = "!git status --short | peco | awk '{print $2}' | xargs git ls-files --stage --"
  # 撤销已提交的文件
  rc = "!git log --pretty=oneline | peco | awk '{print $1}' | xargs git reset --soft"
  # 对比文件差异
  d = "!git status --short | peco | awk '{print $2}' | xargs git difftool -y HEAD"
  # 对比全部文件差异
  da = difftool -y
  # 对比线上文件差异
  df = "!git hist | peco | awk '{print $2}' | xargs -I {} git difftool -y {}^ {}"
  # 推送代码 获取当前分支名
  ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
  # 拉取代码 获取当前分支名
  pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
  # 当前状态
  st = status
  # 分支
  br = branch
  # 合并代码
  me = merge
  # 解决合并代码冲突
  mt = mergetool
  # checkout
  co = checkout
  # coomit
  ci = commit

  # 提交历史
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
  # 提交日志
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)%cd %C(blue)[%an] %Creset%s %C(yellow)%d%Creset\" --date=relative

  pick = cherry-pick
  pickc = cherry-pick --continue


  # clean 的演习, 告诉你哪些文件会被删除
  cln = clean -n
  # 删除当前目录下所有没有 track 过的文件
  clf = clean -f

  # 统计项目代码的总行数
  total = "!git ls-files | xargs cat | wc -l"

[diff]
  tool = vimdiff
[difftool "vimdiff"]
  cmd = vim -d \"$LOCAL\" \"$REMOTE\"
  path =

#===============================================================================
# merge code
# +--------------------------------+
# | LOCAL  |     BASE     | REMOTE |
# +--------------------------------+
# |             MERGED             |
# +--------------------------------+
#
# Example
#
#  git mergetool || g mt
#
#  No files need merging
#  git ls-files --stage <file> || g rmt
#  git checkout -m <file> || g co -m <file>
#
#  [c
#  ]c
#
#  :diffget BASE
#
#  :wqa
#
#  git clean -n || g cln
#  git clean -f || g clf
#
#===============================================================================

[mergetool "vimdiff"]
  cmd = vim -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'

[init]
	defaultBranch = main
[core]
	quotepath = false
  editor = emacsclient -t -a=\\\"\\\"
