#===============================================================================
# window
#===============================================================================
window:
  # 窗口的外边框
  #
  # 可以为如下的值:
  #     - full: 边框和标题栏
  #     - none: 边框和标题栏都没有
  #
  # macos 可以独占的配置:
  #     - transparent: 标题栏，透明背景和标题栏按钮
  #     - buttonless: 标题栏，透明背景，但没有标题栏按钮
  decorations: buttonless

  # 窗口内边距（配置变更需要重启生效）
  #
  # 调整窗口的内边距（单位为像素）。此填充由DPI缩放，并且始终在相对的两边添加指定的值。
  # 注解：内边距是窗口边框相对于终端显示内容的空白部分，可以参考 CSS
  padding:
    x: 8
    y: 8
  # 在终端内容周围平均分配额外的 padding
  # dynamic_padding: false
  # 窗口标题
  # title: Alacritty
  # 是否允许终端的应用更改窗口标题
  # dynamic_title: true
  # 背景透明度
  # background_opacity: 0.99

#===============================================================================
# font
#===============================================================================
font:
  # 常规字体
  normal:
    family: MesloLGM Nerd Font
    # 字体风格
    style: Regular

  # 粗体
  bold:
    family: Menlo
    style: Bold

  # 斜体
  italic:
    family: Menlo
    style: Italic

  # 斜粗体
  bold_italic:
     family: Menlo
     style: Bold Italic

  # 字体大小
  size: 14

  # 每个字符的间的字间距。"offset.y" 可以控制行距，"offset.x" 可以改变字符间距。
  offset:
    x: 0
    y: 0
  # 细线字体渲染（仅适用于macOS）
  # retina 可以设置为 true，非 retina 屏幕建议设置为 false
  use_thin_strokes: true
# If `true`, bold text is drawn using the bright color variants.
# draw_bold_text_with_bright_colors: true

#===============================================================================
# colorscheme
#===============================================================================

# Colors (Base16 Default Dark)
colors:
  # Default colors
  primary:
    background: '0x000000'
    foreground: '0xd8d8d8'

  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text: '0xd8d8d8'
    cursor: '0xd8d8d8'

  # Normal colors
  normal:
    black:   '0x181818'
    red:     '0xab4642'
    green:   '0xa1b56c'
    yellow:  '0xf7ca88'
    blue:    '0x7cafc2'
    magenta: '0xba8baf'
    cyan:    '0x86c1b9'
    white:   '0xd8d8d8'

  # Bright colors
  bright:
    black:   '0x585858'
    red:     '0xab4642'
    green:   '0xa1b56c'
    yellow:  '0xf7ca88'
    blue:    '0x7cafc2'
    magenta: '0xba8baf'
    cyan:    '0x86c1b9'
    white:   '0xf8f8f8'

#===============================================================================
# key_bindings
# 解决 Emacs 键位 失效问题
# @see https://github.com/alacritty/alacritty/issues/62#issuecomment-347552058
# 解决 退格键问题
# @see https://github.com/alacritty/alacritty/issues/1606
# how get chars @see https://www.joshmedeski.com/posts/macos-keyboard-shortcuts-for-tmux
# $ xxd -psd
#===============================================================================
key_bindings:

  - { key: A,         mods: Alt,       chars: "\x1ba"                       }
  - { key: B,         mods: Alt,       chars: "\x1bb"                       }
  - { key: C,         mods: Alt,       chars: "\x1bc"                       }
  - { key: D,         mods: Alt,       chars: "\x1bd"                       }
  - { key: E,         mods: Alt,       chars: "\x1be"                       }
  - { key: F,         mods: Alt,       chars: "\x1bf"                       }
  - { key: G,         mods: Alt,       chars: "\x1bg"                       }
  - { key: H,         mods: Alt,       chars: "\x1bh"                       }
  - { key: I,         mods: Alt,       chars: "\x1bi"                       }
  - { key: J,         mods: Alt,       chars: "\x1bj"                       }
  - { key: K,         mods: Alt,       chars: "\x1bk"                       }
  - { key: L,         mods: Alt,       chars: "\x1bl"                       }
  - { key: M,         mods: Alt,       chars: "\x1bm"                       }
  - { key: N,         mods: Alt,       chars: "\x1bn"                       }
  - { key: O,         mods: Alt,       chars: "\x1bo"                       }
  - { key: P,         mods: Alt,       chars: "\x1bp"                       }
  - { key: Q,         mods: Alt,       chars: "\x1bq"                       }
  - { key: R,         mods: Alt,       chars: "\x1br"                       }
  - { key: S,         mods: Alt,       chars: "\x1bs"                       }
  - { key: T,         mods: Alt,       chars: "\x1bt"                       }
  - { key: U,         mods: Alt,       chars: "\x1bu"                       }
  - { key: V,         mods: Alt,       chars: "\x1bv"                       }
  - { key: W,         mods: Alt,       chars: "\x1bw"                       }
  - { key: X,         mods: Alt,       chars: "\x1bx"                       }
  - { key: Y,         mods: Alt,       chars: "\x1by"                       }
  - { key: Z,         mods: Alt,       chars: "\x1bz"                       }
  - { key: A,         mods: Alt|Shift, chars: "\x1bA"                       }
  - { key: B,         mods: Alt|Shift, chars: "\x1bB"                       }
  - { key: C,         mods: Alt|Shift, chars: "\x1bC"                       }
  - { key: D,         mods: Alt|Shift, chars: "\x1bD"                       }
  - { key: E,         mods: Alt|Shift, chars: "\x1bE"                       }
  - { key: F,         mods: Alt|Shift, chars: "\x1bF"                       }
  - { key: G,         mods: Alt|Shift, chars: "\x1bG"                       }
  - { key: H,         mods: Alt|Shift, chars: "\x1bH"                       }
  - { key: I,         mods: Alt|Shift, chars: "\x1bI"                       }
  - { key: J,         mods: Alt|Shift, chars: "\x1bJ"                       }
  - { key: K,         mods: Alt|Shift, chars: "\x1bK"                       }
  - { key: L,         mods: Alt|Shift, chars: "\x1bL"                       }
  - { key: M,         mods: Alt|Shift, chars: "\x1bM"                       }
  - { key: N,         mods: Alt|Shift, chars: "\x1bN"                       }
  - { key: O,         mods: Alt|Shift, chars: "\x1bO"                       }
  - { key: P,         mods: Alt|Shift, chars: "\x1bP"                       }
  - { key: Q,         mods: Alt|Shift, chars: "\x1bQ"                       }
  - { key: R,         mods: Alt|Shift, chars: "\x1bR"                       }
  - { key: S,         mods: Alt|Shift, chars: "\x1bS"                       }
  - { key: T,         mods: Alt|Shift, chars: "\x1bT"                       }
  - { key: U,         mods: Alt|Shift, chars: "\x1bU"                       }
  - { key: V,         mods: Alt|Shift, chars: "\x1bV"                       }
  - { key: W,         mods: Alt|Shift, chars: "\x1bW"                       }
  - { key: X,         mods: Alt|Shift, chars: "\x1bX"                       }
  - { key: Y,         mods: Alt|Shift, chars: "\x1bY"                       }
  - { key: Z,         mods: Alt|Shift, chars: "\x1bZ"                       }
  - { key: Key1,      mods: Alt,       chars: "\x1b1"                       }
  - { key: Key2,      mods: Alt,       chars: "\x1b2"                       }
  - { key: Key3,      mods: Alt,       chars: "\x1b3"                       }
  - { key: Key4,      mods: Alt,       chars: "\x1b4"                       }
  - { key: Key5,      mods: Alt,       chars: "\x1b5"                       }
  - { key: Key6,      mods: Alt,       chars: "\x1b6"                       }
  - { key: Key7,      mods: Alt,       chars: "\x1b7"                       }
  - { key: Key8,      mods: Alt,       chars: "\x1b8"                       }
  - { key: Key9,      mods: Alt,       chars: "\x1b9"                       }
  - { key: Key0,      mods: Alt,       chars: "\x1b0"                       }
  - { key: Space,     mods: Control,   chars: "\x00"                        } # Ctrl + Space
  - { key: Semicolon, mods: Alt,       chars: "\x1b;"                       } # Alt + ;
  - { key: Grave,     mods: Alt,       chars: "\x1b`"                       } # Alt + `
  - { key: Grave,     mods: Alt|Shift, chars: "\x1b~"                       } # Alt + ~
  - { key: Period,    mods: Alt,       chars: "\x1b."                       } # Alt + .
  - { key: Key8,      mods: Alt|Shift, chars: "\x1b*"                       } # Alt + *
  - { key: Key3,      mods: Alt|Shift, chars: "\x1b#"                       } # Alt + #
  - { key: Period,    mods: Alt|Shift, chars: "\x1b>"                       } # Alt + >
  - { key: Comma,     mods: Alt|Shift, chars: "\x1b<"                       } # Alt + <
  - { key: Minus,     mods: Alt|Shift, chars: "\x1b_"                       } # Alt + _
  - { key: Key5,      mods: Alt|Shift, chars: "\x1b%"                       } # Alt + %
  - { key: Key6,      mods: Alt|Shift, chars: "\x1b^"                       } # Alt + ^
  - { key: Backslash, mods: Alt,       chars: "\x1b\\"                      } # Alt + \
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"                       } # Alt + |
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"                       } # Alt + |
  # @see http://www.blogface.org/2015/03/ctrl-in-emacs-in-mac-terminal.html
  # @see https://github.com/alacritty/alacritty/issues/5508
  - { key: LBracket,  mods: Alt|Shift,     chars: "\x1b[1;5A"               } # C-{
  - { key: RBracket,  mods: Alt|Shift,     chars: "\x1b[1;5B"               } # C-}
  - { key: LBracket,  mods: Alt,           chars: "\x5b"                    }  # [
  - { key: RBracket,  mods: Alt,           chars: "\x5d"                    }  # ]
  - { key: Back,      action: ReceiveChar                                   }
  - { key: Back,      mods: Control,           chars: "\x1bb\x0b"           } #  M-b + C-k
  - { key: Back,      mods: Control|Shift,     chars: "\x01\x0b"            } # C-a + C-k
  - { key: P,         mods: Shift|Control,     chars: "\x1b[1;2A"           } # C-P
  - { key: N,         mods: Shift|Control,     chars: "\x1b[1;2B"           } # C-N
  - { key: B,         mods: Shift|Control,     chars: "\x1b[1;2D"           } # C-B
  - { key: F,         mods: Shift|Control,     chars: "\x1b[1;2C"           } # C-F
  # - { key: E,         mods: Shift|Control,     chars: "\x00\x05"          } # C-E
  # - { key: A,         mods: Shift|Control,     chars: "\x00\x01"          } # C-A
  - { key: Return,    mods: Control,           chars: "\x05\x1bj"           } # C-e M-j
  - { key: Return,    mods: Shift|Control,     chars: "\x10\x05\x1bj"       } # C-p M-j
  - { key: A,         mods: Command,           chars: "\x1bq"               } # tmux M-q

