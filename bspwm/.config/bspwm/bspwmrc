#! /bin/sh

### Essentials

# Truncate a couple of common commands that are used herein.

_bc() {
	bspc config "$@"
}

_check() {
	command -v "$1" > /dev/null
}


### Visual options

#### window management
_bc automatic_scheme alternate
_bc initial_polarity second_child
_bc split_ratio 0.5
_bc border_width 2
_bc window_gap 2
_bc single_monocle false
_bc borderless_monocle true
_bc gapless_monocle true
_bc focus_follows_pointer true
_bc pointer_follows_monitor true
_bc pointer_modifier mod4
_bc pointer_action1 move
_bc pointer_action2 resize_side
_bc ignore_ewmh_focus false

#### window rules
bspc rule -a Emacs state=tiled
bspc rule -a "Google Chrome" desktop='^2'

#### colours
_check bspwm_conf_colors && bspwm_conf_colors &


bspc monitor -d 1 2 3 4 5


### autostart

#pgrep -x panel > /dev/null || panel &

# Parse my custom key mappings.  These make Caps behave as another Ctrl
# key.  We need to evaluate this first otherwise it might mess up with
# SXHKD.
[ -f "$HOME"/.Xmodmap ] && xmodmap "$HOME"/.Xmodmap

# The hotkey daemon that handles all custom key bindings.  I split the
# key chords into separate files, based on their scope.  The ones that
# pertain to the window manager are defined in sxhkdrc_bspc.
_check sxhkd && sxhkd &

# Launch Polybar
if _check polybar
then
	# Make sure we have no running instances
	pgrep -x polybar && pkill -x polybar
	polybar bspwm &
fi

# Run the tool that sets the wallpaper.  A program could be used that
# handles the desktop in general, including the option to set icons.
# But this is enough for my case.  Here is a command I tested and which
# works (using the Xfce desktop manager):
# xfdesktop --sm-client-disable --disable-wm-check &
if _check feh
then
    if [ -f "$HOME"/.fehbg ]
    then
        "$HOME"/.fehbg &
    fi
fi


# Load my Xresources
_check xrdb && [ -f "$HOME"/.Xresources ] && xrdb -I "$HOME" -merge "$HOME"/.Xresources


